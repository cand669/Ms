// Generated by view binder compiler. Do not edit!
package com.example.ein.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.example.ein.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView aidx;

  @NonNull
  public final TextView idx;

  @NonNull
  public final Button next;

  @NonNull
  public final Button show;

  @NonNull
  public final Button tc;

  @NonNull
  public final Button te;

  @NonNull
  public final TextView xxx;

  @NonNull
  public final TextView yw;

  @NonNull
  public final TextView yyy;

  @NonNull
  public final TextView zzz;

  private ActivityMainBinding(@NonNull LinearLayout rootView, @NonNull TextView aidx,
      @NonNull TextView idx, @NonNull Button next, @NonNull Button show, @NonNull Button tc,
      @NonNull Button te, @NonNull TextView xxx, @NonNull TextView yw, @NonNull TextView yyy,
      @NonNull TextView zzz) {
    this.rootView = rootView;
    this.aidx = aidx;
    this.idx = idx;
    this.next = next;
    this.show = show;
    this.tc = tc;
    this.te = te;
    this.xxx = xxx;
    this.yw = yw;
    this.yyy = yyy;
    this.zzz = zzz;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.aidx;
      TextView aidx = rootView.findViewById(id);
      if (aidx == null) {
        break missingId;
      }

      id = R.id.idx;
      TextView idx = rootView.findViewById(id);
      if (idx == null) {
        break missingId;
      }

      id = R.id.next;
      Button next = rootView.findViewById(id);
      if (next == null) {
        break missingId;
      }

      id = R.id.show;
      Button show = rootView.findViewById(id);
      if (show == null) {
        break missingId;
      }

      id = R.id.tc;
      Button tc = rootView.findViewById(id);
      if (tc == null) {
        break missingId;
      }

      id = R.id.te;
      Button te = rootView.findViewById(id);
      if (te == null) {
        break missingId;
      }

      id = R.id.xxx;
      TextView xxx = rootView.findViewById(id);
      if (xxx == null) {
        break missingId;
      }

      id = R.id.yw;
      TextView yw = rootView.findViewById(id);
      if (yw == null) {
        break missingId;
      }

      id = R.id.yyy;
      TextView yyy = rootView.findViewById(id);
      if (yyy == null) {
        break missingId;
      }

      id = R.id.zzz;
      TextView zzz = rootView.findViewById(id);
      if (zzz == null) {
        break missingId;
      }

      return new ActivityMainBinding((LinearLayout) rootView, aidx, idx, next, show, tc, te, xxx,
          yw, yyy, zzz);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
